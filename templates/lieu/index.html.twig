{% include 'base_logged.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="/styles/home.css">
{% endblock %}

{% block body %}
    <div class="content">
        <div class="list campus">
            <h2>Liste des lieux</h2>
            <p class="missing">Un lieu manquant ? <a href="{{ path('app_lieu_create') }}">Ajoute le !</a></p>
            <div class="separator"></div>
            <div class="activity-content" id="activityContent">
                {% for lieu in lieuList %}
                    <div class="activity canClick" data-lat="{{ lieu.latitude }}" data-long="{{ lieu.longitude }}"
                         data-id="{{ lieu.id }}">
                        <span class="flex">
                            <img src={{ asset('thumbnails/' ~ lieu.fileName) }} alt="activity thumbnails"/>
                            <span class="title-description">
                                <p class="title">{{ lieu.name }}</p>
                            </span>
                        </span>
                        <a href="{{ path('app_lieu_update', {'id' : lieu.id }) }}"><button class="button"><span>Modifier</span></button></a>
                    </div>
                {% endfor %}
            </div>
        </div>
        <div class="map campus">
            <div id="map"></div>
        </div>
    </div>

    <script>
        (g => {
            var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__",
                m = document, b = window;
            b = b[c] || (b[c] = {});
            var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams,
                u = () => h || (h = new Promise(async (f, n) => {
                    await (a = m.createElement("script"));
                    e.set("libraries", [...r] + "");
                    for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]);
                    e.set("callback", c + ".maps." + q);
                    a.src = `https://maps.${c}apis.com/maps/api/js?` + e;
                    d[q] = f;
                    a.onerror = () => h = n(Error(p + " could not load."));
                    a.nonce = m.querySelector("script[nonce]")?.nonce || "";
                    m.head.append(a)
                }));
            d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n))
        })({
            key: "AIzaSyBMO3LVl_v7xhApZEBfLfG0N6oU5yQUHjA",
            v: "weekly",
        });
    </script>
    <script src="/scripts/home.js"></script>
{% endblock %}