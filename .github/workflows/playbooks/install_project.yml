- hosts: all
  become: yes
  become_user: root

  vars_files:
    - vars.yml
    - secrets.yml
  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Git and Composer
      ansible.builtin.apt:
        name:
          - git
          - composer
        state: present

    - name: Remove all Symfony project files
      ansible.builtin.file:
        path: "{{ project_dest }}"
        state: absent

    - name: Ensure /var/www directory exists
      ansible.builtin.file:
        path: /var/www
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Add git safe var/www/project_name
      ansible.builtin.command:
        cmd: git config --global --add safe.directory /root/var/www/ENI-BDE

    - name: Clone project repository into /var/www
      ansible.builtin.git:
        repo: "{{ project_repo }}"
        dest: "{{ project_dest }}"
        version: main
        force: yes
        update: yes
      notify:
        - Set permissions for project folder

    - name: Install packages for Symfony
      ansible.builtin.apt:
        pkg:
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common

    - name: Run composer require bundle
      ansible.builtin.command:
        cmd: composer install
        chdir: "{{ project_dest }}"
      environment:
        COMPOSER_ALLOW_SUPERUSER: 1

    # Custom database url
    - name: Replace DATABASE_URL in .env for Production
      ansible.builtin.replace:
        path: "{{ project_dest }}/.env"
        regexp: '^DATABASE_URL=.*'
        replace: "DATABASE_URL={{ db_url }}"

    - name: Replace APP_ENV in .env for Production for fixture execution
      ansible.builtin.replace:
        path: "{{ project_dest }}/.env"
        regexp: '^APP_ENV=.*'
        replace: "APP_ENV=dev"

    - name: Replace APP_DEBUG in .env for Production
      ansible.builtin.replace:
        path: "{{ project_dest }}/.env"
        regexp: '^APP_DEBUG=.*'
        replace: "APP_DEBUG=0"

    - name: Run cache:clear
      ansible.builtin.shell:
        cmd: |
          php bin/console cache:clear
        chdir: "{{ project_dest }}"

    - name: Ensure MySQL root user has all privileges
      community.mysql.mysql_user:
        name: root
        host: localhost
        password: "{{ mysql_password }}"
        priv: "*.*:ALL,GRANT"
        state: present

    - name: Execute doctrine migration
      ansible.builtin.command:
        cmd: php bin/console doctrine:migrations:migrate --no-interaction
        chdir: "{{ project_dest }}"

    - name: Execute fixture load
      ansible.builtin.command:
        cmd: php bin/console doctrine:fixtures:load --no-interaction
        chdir: "{{ project_dest }}"

    - name: Replace APP_ENV in .env for Production after fixture execution
      ansible.builtin.replace:
        path: "{{ project_dest }}/.env"
        regexp: '^APP_ENV=.*'
        replace: "APP_ENV=prod"

  handlers:
    - name: Set permissions for project folder
      ansible.builtin.command:
        cmd: chown -R www-data:www-data "{{ project_dest }}"